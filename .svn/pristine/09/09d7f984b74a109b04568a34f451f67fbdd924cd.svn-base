///<reference path="http://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js" />
///<reference path="../jquery.js" />
/// <reference path="../knockout.js" />

$(document).ready(function(){
    
    //var homeTeam = $("");
    
    
//    $("div.game .result-hometeam").each(function (){
//		//alert($(this).text());
//		$("div.game .editable").editable("http://localhost/Wc2010.ashx?action=saveResult&group=A&hometeam=Sydafrika&awayteam=Mexiko&homegoal=2&awaygoal=0", { 
//			method : "PUT",
//			id   : 'homeGoal',
//			name : 'newvalue'
//		});
//    });
    
//    $("div.game .editable").editable("http://localhost/Wc2010.ashx?action=saveResult&group=A&hometeam=Sydafrika&awayteam=Mexiko&homegoal=2&awaygoal=0", { 
//		method : "PUT",
//		id   : 'homeGoal',
//        name : 'newvalue'
//	});


//$("div.game .editable").editable("http://localhost/Wc2010.ashx?action=saveResult&group=A&hometeam=Sydafrika&awayteam=Mexiko&homegoal=2&awaygoal=0", { 
//		method  : "PUT"
//	});

 $("div.game .editable").editable("http://localhost/Wc2010.ashx?action=saveResult&group=A&hometeam=Sydafrika&awayteam=Mexiko&homegoal=2&awaygoal=0", { 
		method		: "PUT",
		id			: "gameid",
		name		: "result",
		callback : function(value, settings) {
//         console.log(this);
//         console.log(value);
//         console.log(settings);
			
			var group = $(this).parent().parent().attr('rel');
			group = group.replace('Grupp-', '');
			//alert(group);
			
			//alert("dsfsdf");
			$.getJSON('http://localhost/Wc2010.ashx?action=getGroup&group=' + group, function(data){
				
//				$.each(data, function(key, val) {
//					items.push('<li id="' + key + '">' + val + '</li>');
//				});
				
//				$.each(data, function(key, val) {
//					response += ('<td>' + data.team + '</td>');
//				});
				
				var response = '<tr><td>&nbsp;</td><td>P</td><td>W</td><td>D</td><td>L</td><td>F</td><td>A</td><td>+-</td><td>P</td></tr>';
				for(i=0;i<data.length;i++){
					response += ('<tr class="' + (i+1) + '" class="game">');
					response += ('<td class="name">' + data[i].name + '</td>');
					response += ('<td>' + data[i].gamesplayed + '</td>');
					response += ('<td>' + data[i].gameswon + '</td>');
					response += ('<td>' + data[i].gamesdraw + '</td>');
					response += ('<td>' + data[i].gameslost + '</td>');
					response += ('<td>' + data[i].goalsmade + '</td>');
					response += ('<td>' + data[i].goalsbackward + '</td>');
					response += ('<td>' + data[i].goaldifference + '</td>');
					response += ('<td>' + data[i].points + '</td>');
					response += ('</tr>');
				}
				//Ersätter befintlig tabell
				$("#Grupp-" + group).html(response);
				
				//Uppdaterar slutspelsträd
				BuildFinalsTree();
			});
         }
	});
	
	//Bygger slutspelsträd
	BuildFinalsTree();
});

function BuildFinalsTree()
{
//	alert('tree');
	//var team = $('#Grupp-A tr.1 .name').text();
	//$('.eightfinals #49.game .team .name').text('sfds');
	
	//1:an grupp A
	$('.eightfinals #49.game .team .name:first').text(
		$('#Grupp-A tr.1 .name').text());
	//2:an grupp B
	$('.eightfinals #49.game .team .name:last').text(
		$('#Grupp-B tr.2 .name').text());
		
	//1:an grupp C
	$('.eightfinals #50.game .team .name:first').text(
		$('#Grupp-C tr.1 .name').text());
	//2:an grupp D
	$('.eightfinals #50.game .team .name:last').text(
		$('#Grupp-D tr.2 .name').text());
		
	//1:an grupp D
	$('.eightfinals #51.game .team .name:first').text(
		$('#Grupp-D tr.1 .name').text());
	//2:an grupp C
	$('.eightfinals #51.game .team .name:last').text(
		$('#Grupp-C tr.2 .name').text());
		
	//1:an grupp B
	$('.eightfinals #52.game .team .name:first').text(
		$('#Grupp-B tr.1 .name').text());
	//2:an grupp A
	$('.eightfinals #52.game .team .name:last').text(
		$('#Grupp-A tr.2 .name').text());
		
	//1:an grupp E
	$('.eightfinals #53.game .team .name:first').text(
		$('#Grupp-E tr.1 .name').text());
	//2:an grupp F
	$('.eightfinals #53.game .team .name:last').text(
		$('#Grupp-F tr.2 .name').text());
		
	//1:an grupp G
	$('.eightfinals #54.game .team .name:first').text(
		$('#Grupp-G tr.1 .name').text());
	//2:an grupp H
	$('.eightfinals #54.game .team .name:last').text(
		$('#Grupp-H tr.2 .name').text());
		
	//1:an grupp F
	$('.eightfinals #55.game .team .name:first').text(
		$('#Grupp-F tr.1 .name').text());
	//2:an grupp E
	$('.eightfinals #55.game .team .name:last').text(
		$('#Grupp-E tr.2 .name').text());
	
	//1:an grupp H
	$('.eightfinals #56.game .team .name:first').text(
		$('#Grupp-H tr.1 .name').text());
	//2:an grupp G
	$('.eightfinals #56.game .team .name:last').text(
		$('#Grupp-G tr.2 .name').text());
		
	$('.eightfinals .game').live('click', function(event){
		alert('denise');
	});
}



/////////////////////////
function Team(data) {
//function Team(name, gamesplayed, gameswon, gamesdraw, gameslost, goalsmade, goalsbackward, goaldifference, points) {
    var self = this;
    self.name = ko.observable(data.name);
    self.gamesplayed = ko.observable(data.gamesplayed);
    self.gameswon = ko.observable(data.gameswon);
    self.gamesdraw = ko.observable(data.gamesdraw);
    self.gameslost = ko.observable(data.gameslost);
    self.goalsmade = ko.observable(data.goalsmade);
    self.goalsbackward = ko.observable(data.goalsbackward);
    self.goaldifference = ko.observable(data.goaldifference);
    self.points = ko.observable(data.points);
	
//	var self = this;
//    self.name = name;
//    self.gamesplayed = gamesplayed;
//    self.gameswon = gameswon;
//    self.gamesdraw = gamesdraw;
//    self.gameslost = gameslost;
//    self.goalsmade = goalsmade;
//    self.goalsbackward = goalsbackward;
//    self.goaldifference = goaldifference;
//    self.points = points;
}


// This is a simple *viewmodel* - JavaScript that defines the data and behavior of your UI
function TeamListViewModel() {
    var self = this;
    self.teams = ko.observableArray([]);
    
     // Load initial state from server, convert it to Task instances, then populate self.tasks
    $.getJSON("/Wc2010.ashx?action=getGroup&group=a", function(allData) {
        var mappedTeams = $.map(allData, function(item) { return new Team(item) });
        self.teams(mappedTeams);
    });
    
    // Operations
//    self.Update = function() {
//         // Load initial state from server, convert it to Task instances, then populate self.tasks
//		$.getJSON("/Wc2010.ashx?action=getGroup&group=a", function(allData) {
//			var mappedTeams = $.map(allData, function(item) { return new Team(item) });
//			self.teams(mappedTeams);
//		});
//    }

}

// Activates knockout.js
$(document).ready(function(){
	ko.applyBindings(new TeamListViewModel());
});
